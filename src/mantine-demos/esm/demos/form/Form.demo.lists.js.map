{"version":3,"file":"Form.demo.lists.js","sources":["../../../src/demos/form/Form.demo.lists.tsx"],"sourcesContent":["import React from 'react';\nimport { useForm } from '@mantine/form';\nimport { TextInput, Switch, Group, ActionIcon, Box, Text, Button, Code } from '@mantine/core';\nimport { randomId } from '@mantine/hooks';\nimport { MantineDemo } from '@mantine/ds';\nimport { IconTrash } from '@tabler/icons-react';\n\nconst code = `\nimport { useForm } from '@mantine/form';\nimport { TextInput, Switch, Group, ActionIcon, Box, Text, Button, Code } from '@mantine/core';\nimport { randomId } from '@mantine/hooks';\nimport { IconTrash } from '@tabler/icons-react';\n\nfunction Demo() {\n  const form = useForm({\n    initialValues: {\n      employees: [{ name: '', active: false, key: randomId() }],\n    },\n  });\n\n  const fields = form.values.employees.map((item, index) => (\n    <Group key={item.key} mt=\"xs\">\n      <TextInput\n        placeholder=\"John Doe\"\n        withAsterisk\n        sx={{ flex: 1 }}\n        {...form.getInputProps(\\`employees.\\${index}.name\\`)}\n      />\n      <Switch\n        label=\"Active\"\n        {...form.getInputProps(\\`employees.\\${index}.active\\`, { type: 'checkbox' })}\n      />\n      <ActionIcon color=\"red\" onClick={() => form.removeListItem('employees', index)}>\n        <IconTrash size=\"1rem\" />\n      </ActionIcon>\n    </Group>\n  ));\n\n  return (\n    <Box maw={500} mx=\"auto\">\n      {fields.length > 0 ? (\n        <Group mb=\"xs\">\n          <Text weight={500} size=\"sm\" sx={{ flex: 1 }}>\n            Name\n          </Text>\n          <Text weight={500} size=\"sm\" pr={90}>\n            Status\n          </Text>\n        </Group>\n      ) : (\n        <Text color=\"dimmed\" align=\"center\">\n          No one here...\n        </Text>\n      )}\n\n      {fields}\n\n      <Group position=\"center\" mt=\"md\">\n        <Button\n          onClick={() =>\n            form.insertListItem('employees', { name: '', active: false, key: randomId() })\n          }\n        >\n          Add employee\n        </Button>\n      </Group>\n\n      <Text size=\"sm\" weight={500} mt=\"md\">\n        Form values:\n      </Text>\n      <Code block>{JSON.stringify(form.values, null, 2)}</Code>\n    </Box>\n  );\n}\n`;\n\nfunction Demo() {\n  const form = useForm({\n    initialValues: {\n      employees: [{ name: '', active: false, key: randomId() }],\n    },\n  });\n\n  const fields = form.values.employees.map((item, index) => (\n    <Group key={item.key} mt=\"xs\">\n      <TextInput\n        placeholder=\"John Doe\"\n        withAsterisk\n        sx={{ flex: 1 }}\n        {...form.getInputProps(`employees.${index}.name`)}\n      />\n      <Switch\n        label=\"Active\"\n        {...form.getInputProps(`employees.${index}.active`, { type: 'checkbox' })}\n      />\n      <ActionIcon color=\"red\" onClick={() => form.removeListItem('employees', index)}>\n        <IconTrash size=\"1rem\" />\n      </ActionIcon>\n    </Group>\n  ));\n\n  return (\n    <Box maw={500} mx=\"auto\">\n      {fields.length > 0 ? (\n        <Group mb=\"xs\">\n          <Text weight={500} size=\"sm\" sx={{ flex: 1 }}>\n            Name\n          </Text>\n          <Text weight={500} size=\"sm\" pr={90}>\n            Status\n          </Text>\n        </Group>\n      ) : (\n        <Text color=\"dimmed\" align=\"center\">\n          No one here...\n        </Text>\n      )}\n\n      {fields}\n\n      <Group position=\"center\" mt=\"md\">\n        <Button\n          onClick={() =>\n            form.insertListItem('employees', { name: '', active: false, key: randomId() })\n          }\n        >\n          Add employee\n        </Button>\n      </Group>\n\n      <Text size=\"sm\" weight={500} mt=\"md\">\n        Form values:\n      </Text>\n      <Code block>{JSON.stringify(form.values, null, 2)}</Code>\n    </Box>\n  );\n}\n\nexport const lists: MantineDemo = {\n  type: 'demo',\n  component: Demo,\n  code,\n};\n"],"names":[],"mappings":"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"}