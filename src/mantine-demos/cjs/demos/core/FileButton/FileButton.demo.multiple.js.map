{"version":3,"file":"FileButton.demo.multiple.js","sources":["../../../../src/demos/core/FileButton/FileButton.demo.multiple.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { MantineDemo } from '@mantine/ds';\nimport { FileButton, Button, Group, Text, List } from '@mantine/core';\n\nconst code = `\nimport { useState } from 'react';\nimport { FileButton, Button, Group, Text, List } from '@mantine/core';\n\nfunction Demo() {\n  const [files, setFiles] = useState<File[]>([]);\n  return (\n    <>\n      <Group position=\"center\">\n        <FileButton onChange={setFiles} accept=\"image/png,image/jpeg\" multiple>\n          {(props) => <Button {...props}>Upload image</Button>}\n        </FileButton>\n      </Group>\n\n      {files.length > 0 && (\n        <Text size=\"sm\" mt=\"sm\">\n          Picked files:\n        </Text>\n      )}\n\n      <List size=\"sm\" mt={5} withPadding>\n        {files.map((file, index) => (\n          <List.Item key={index}>{file.name}</List.Item>\n        ))}\n      </List>\n    </>\n  );\n}\n\n`;\n\nfunction Demo() {\n  const [files, setFiles] = useState<File[]>([]);\n  return (\n    <>\n      <Group position=\"center\">\n        <FileButton onChange={setFiles} accept=\"image/png,image/jpeg\" multiple>\n          {(props) => <Button {...props}>Upload image</Button>}\n        </FileButton>\n      </Group>\n\n      {files.length > 0 && (\n        <Text size=\"sm\" mt=\"sm\">\n          Picked files:\n        </Text>\n      )}\n\n      <List size=\"sm\" mt={5} withPadding>\n        {files.map((file, index) => (\n          <List.Item key={index}>{file.name}</List.Item>\n        ))}\n      </List>\n    </>\n  );\n}\n\nexport const multiple: MantineDemo = {\n  type: 'demo',\n  component: Demo,\n  code,\n};\n"],"names":["useState","React","Group","FileButton","Button","Text","List"],"mappings":"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"}