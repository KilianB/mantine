{"version":3,"file":"CreateStyles.demo.composition.js","sources":["../../../src/demos/create-styles/CreateStyles.demo.composition.tsx"],"sourcesContent":["import React from 'react';\nimport { MantineDemo } from '@mantine/ds';\nimport { createStyles, getStylesRef } from '@mantine/core';\n\nconst code = `\nimport { createStyles, getStylesRef } from '@mantine/core';\n\nconst useStyles = createStyles((theme) => ({\n  button: {\n    // assign reference to selector\n    ref: getStylesRef('button'),\n\n    // and add any other properties\n    backgroundColor: theme.colors.blue[6],\n    color: theme.white,\n    padding: \\`\\${theme.spacing.sm} \\${theme.spacing.lg}\\`,\n    borderRadius: theme.radius.md,\n    cursor: 'pointer',\n    border: 0,\n  },\n\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[8] : theme.colors.gray[1],\n    padding: theme.spacing.xl,\n\n    // reference button with nested selector\n    [\\`&:hover .\\${getStylesRef('button')}\\`]: {\n      backgroundColor: theme.colors.violet[6],\n    },\n  },\n}));\n\nfunction Demo() {\n  const { classes } = useStyles();\n  return (\n    <div className={classes.container}>\n      <button className={classes.button} type=\"button\">\n        Hover container to change button color\n      </button>\n    </div>\n  );\n}\n`;\n\nconst useStyles = createStyles((theme) => ({\n  button: {\n    // assign reference to selector\n    ref: getStylesRef('button'),\n\n    // and add any other properties\n    backgroundColor: theme.colors.blue[6],\n    color: theme.white,\n    padding: `${theme.spacing.sm} ${theme.spacing.lg}`,\n    borderRadius: theme.radius.md,\n    cursor: 'pointer',\n    border: 0,\n  },\n\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[8] : theme.colors.gray[1],\n    padding: theme.spacing.xl,\n\n    // reference button with nested selector\n    [`&:hover .${getStylesRef('button')}`]: {\n      backgroundColor: theme.colors.violet[6],\n    },\n  },\n}));\n\nfunction Demo() {\n  const { classes } = useStyles();\n  return (\n    <div className={classes.container}>\n      <button className={classes.button} type=\"button\">\n        Hover container to change button color\n      </button>\n    </div>\n  );\n}\n\nexport const createStylesComposition: MantineDemo = {\n  type: 'demo',\n  component: Demo,\n  code,\n};\n"],"names":["createStyles","getStylesRef","React"],"mappings":";;;;;;;;;;;AAEA,MAAM,IAAI,GAAG,CAAC;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AACF,MAAM,SAAS,GAAGA,iBAAY,CAAC,CAAC,KAAK,MAAM;AAC3C,EAAE,MAAM,EAAE;AACV,IAAI,GAAG,EAAEC,iBAAY,CAAC,QAAQ,CAAC;AAC/B,IAAI,eAAe,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AACzC,IAAI,KAAK,EAAE,KAAK,CAAC,KAAK;AACtB,IAAI,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AACtD,IAAI,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,EAAE;AACjC,IAAI,MAAM,EAAE,SAAS;AACrB,IAAI,MAAM,EAAE,CAAC;AACb,GAAG;AACH,EAAE,SAAS,EAAE;AACb,IAAI,OAAO,EAAE,MAAM;AACnB,IAAI,cAAc,EAAE,QAAQ;AAC5B,IAAI,eAAe,EAAE,KAAK,CAAC,WAAW,KAAK,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/F,IAAI,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,EAAE;AAC7B,IAAI,CAAC,CAAC,SAAS,EAAEA,iBAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG;AAC5C,MAAM,eAAe,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AAC7C,KAAK;AACL,GAAG;AACH,CAAC,CAAC,CAAC,CAAC;AACJ,SAAS,IAAI,GAAG;AAChB,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,SAAS,EAAE,CAAC;AAClC,EAAE,uBAAuBC,cAAK,CAAC,aAAa,CAAC,KAAK,EAAE;AACpD,IAAI,SAAS,EAAE,OAAO,CAAC,SAAS;AAChC,GAAG,kBAAkBA,cAAK,CAAC,aAAa,CAAC,QAAQ,EAAE;AACnD,IAAI,SAAS,EAAE,OAAO,CAAC,MAAM;AAC7B,IAAI,IAAI,EAAE,QAAQ;AAClB,GAAG,EAAE,wCAAwC,CAAC,CAAC,CAAC;AAChD,CAAC;AACW,MAAC,uBAAuB,GAAG;AACvC,EAAE,IAAI,EAAE,MAAM;AACd,EAAE,SAAS,EAAE,IAAI;AACjB,EAAE,IAAI;AACN;;;;"}