{"version":3,"file":"Theme.demo.focusRingStyles.js","sources":["../../../src/demos/theme/Theme.demo.focusRingStyles.tsx"],"sourcesContent":["import React from 'react';\nimport { MantineDemo } from '@mantine/ds';\nimport { MantineProvider, Button, TextInput, Group, rem } from '@mantine/core';\n\nconst code = `\nimport { MantineProvider, Button, TextInput, Group, rem } from '@mantine/core';\n\nfunction Demo() {\n  return (\n    <MantineProvider\n      inherit\n      theme={{\n        focusRingStyles: {\n          // reset styles are applied to <button /> and <a /> elements\n          // in &:focus:not(:focus-visible) selector to mimic\n          // default browser behavior for native <button /> and <a /> elements\n          resetStyles: () => ({ outline: 'none' }),\n\n          // styles applied to all elements expect inputs based on Input component\n          // styled are added with &:focus selector\n          styles: (theme) => ({ outline: \\`\\${rem(2)} solid \\${theme.colors.orange[5]}\\` }),\n\n          // focus styles applied to components that are based on Input\n          // styled are added with &:focus selector\n          inputStyles: (theme) => ({ outline: \\`\\${rem(2)} solid \\${theme.colors.orange[5]}\\` }),\n        },\n      }}\n    >\n      <Group grow>\n        <Button>Move focus with tab</Button>\n        <TextInput placeholder=\"Focus input to see styles override\" />\n      </Group>\n    </MantineProvider>\n  );\n}\n`;\n\nfunction Demo() {\n  return (\n    <MantineProvider\n      inherit\n      theme={{\n        focusRingStyles: {\n          // reset styles are applied to <button /> and <a /> elements\n          // in &:focus:not(:focus-visible) selector to mimic\n          // default browser behavior for native <button /> and <a /> elements\n          resetStyles: () => ({ outline: 'none' }),\n\n          // styles applied to all elements expect inputs based on Input component\n          // styled are added with &:focus selector\n          styles: (theme) => ({ outline: `${rem(2)} solid ${theme.colors.orange[5]}` }),\n\n          // focus styles applied to components that are based on Input\n          // styled are added with &:focus selector\n          inputStyles: (theme) => ({ outline: `${rem(2)} solid ${theme.colors.orange[5]}` }),\n        },\n      }}\n    >\n      <Group grow>\n        <Button>Move focus with tab</Button>\n        <TextInput placeholder=\"Focus input to see styles override\" />\n      </Group>\n    </MantineProvider>\n  );\n}\n\nexport const focusRingStyles: MantineDemo = {\n  type: 'demo',\n  component: Demo,\n  code,\n};\n"],"names":["React","MantineProvider","rem","Group","Button","TextInput"],"mappings":";;;;;;;;;;;AAEA,MAAM,IAAI,GAAG,CAAC;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AACF,SAAS,IAAI,GAAG;AAChB,EAAE,uBAAuBA,cAAK,CAAC,aAAa,CAACC,oBAAe,EAAE;AAC9D,IAAI,OAAO,EAAE,IAAI;AACjB,IAAI,KAAK,EAAE;AACX,MAAM,eAAe,EAAE;AACvB,QAAQ,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC;AAChD,QAAQ,MAAM,EAAE,CAAC,KAAK,MAAM,EAAE,OAAO,EAAE,CAAC,EAAEC,QAAG,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACrF,QAAQ,WAAW,EAAE,CAAC,KAAK,MAAM,EAAE,OAAO,EAAE,CAAC,EAAEA,QAAG,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AAC1F,OAAO;AACP,KAAK;AACL,GAAG,kBAAkBF,cAAK,CAAC,aAAa,CAACG,UAAK,EAAE;AAChD,IAAI,IAAI,EAAE,IAAI;AACd,GAAG,kBAAkBH,cAAK,CAAC,aAAa,CAACI,WAAM,EAAE,IAAI,EAAE,qBAAqB,CAAC,kBAAkBJ,cAAK,CAAC,aAAa,CAACK,cAAS,EAAE;AAC9H,IAAI,WAAW,EAAE,oCAAoC;AACrD,GAAG,CAAC,CAAC,CAAC,CAAC;AACP,CAAC;AACW,MAAC,eAAe,GAAG;AAC/B,EAAE,IAAI,EAAE,MAAM;AACd,EAAE,SAAS,EAAE,IAAI;AACjB,EAAE,IAAI;AACN;;;;"}